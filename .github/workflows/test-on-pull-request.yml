name: Run Tests and Push Docker Image

on:
  pull_request:
    branches:
      - Dev
      - QA
      - master
  push:
    branches:
      - Dev
      - QA
      - master

jobs:
  test_and_build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Configurar Node.js con una versión compatible
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'  # Usamos la versión compatible de Node.js

      # Paso 3: Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Paso 4: Ejecutar pruebas
      - name: Run Tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless

  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: test_and_build  # Asegura que los tests se hayan ejecutado antes de la construcción de la imagen Docker
    steps:
      # Paso 1: Clonar el repositorio (de nuevo para asegurarse de tener los archivos más recientes)
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Iniciar sesión en DockerHub o GitHub Packages
      - name: Log in to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Paso 3: Construir la imagen Docker
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/my-app:${{ github.ref_name }} .

      # Paso 4: Subir la imagen a GitHub Packages
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}/hola:${{ github.ref_name }}
