name: Run Tests and Push Docker Image

on:
  pull_request:
    branches:
      - Dev
      - QA
      - master
  push:
    branches:
      - Dev
      - QA
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Configurar Node.js con una versión compatible
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'  # Usamos la versión compatible de Node.js

      # Paso 3: Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Paso 4: Ejecutar pruebas
      - name: Run Tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless

  build_and_push_docker_image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Paso para autenticar en el GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ToledoSofia              # Aquí va tu nombre de usuario directamente
          password: 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  # Aquí pasas el token directamente

      # Paso para construir y subir la imagen Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/toledosofia/hola:${{ github.ref_name }}

      # Paso para postear el estatus del build en la PR
      - name: Post build status to PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              body: `Docker image built and pushed successfully!`
            })
